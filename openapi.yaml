openapi: 3.0.0
info:
  title: Book API
  version: 1.0.0
  description: A simple Book API
servers:
  - url: http://localhost:3000/api
paths:
  /books:
    get:
      summary: Get all books
      responses:
        '200':
          description: A list of books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
        '500':
          description: Server error
    post:
      summary: Create a new book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookInput'
      responses:
        '201':
          description: Book created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '400':
          description: Invalid input
  /books/{id}:
    get:
      summary: Get a book by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID of the book to retrieve
      responses:
        '200':
          description: A single book
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '404':
          description: Book not found
        '500':
          description: Server error
    put:
      summary: Update a book by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID of the book to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookUpdateInput'
      responses:
        '200':
          description: Book updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '400':
          description: Invalid input
        '404':
          description: Book not found
    delete:
      summary: Delete a book by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID of the book to delete
      responses:
        '200':
          description: Book deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Book deleted
        '404':
          description: Book not found
        '500':
          description: Server error
components:
  schemas:
    Book:
      type: object
      properties:
        _id:
          type: string
          description: The unique identifier for the book
        title:
          type: string
          description: The title of the book
        author:
          type: string
          description: The author of the book
        publishedYear:
          type: integer
          description: The year the book was published
      required:
        - title
        - author
        - publishedYear
    BookInput:
      type: object
      properties:
        title:
          type: string
          description: The title of the book
        author:
          type: string
          description: The author of the book
        publishedYear:
          type: integer
          description: The year the book was published
      required:
        - title
        - author
        - publishedYear
    BookUpdateInput:
      type: object
      properties:
        title:
          type: string
          description: The title of the book
        author:
          type: string
          description: The author of the book
        publishedYear:
          type: integer
          description: The year the book was published